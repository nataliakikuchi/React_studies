{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nataliakikuchi/Documents/React_studies/React_Router/petshop/src/components/PostList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport search from \"../api/api\";\n\nconst PostList = ({\n  url\n}) => {\n  _s();\n\n  const [posts, setPosts] = useState([]); //chamando a API\n\n  useEffect(() => {\n    search(url, setPosts);\n  }, []); //array de dependência, toda vez que for alterar o estado inicial da aplicação, vou chamar search e ele altera o estado da aplicação\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"posts container\",\n    children: posts.map(post => {\n      /*#__PURE__*/\n      _jsxDEV(Link, {\n        className: `cartao-post cartao-post--${post.categoria}`,\n        children: /*#__PURE__*/_jsxDEV(\"article\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"cartao-post--titulo\",\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"cartao-post--meta\",\n            children: post.metadescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostList, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/Users/nataliakikuchi/Documents/React_studies/React_Router/petshop/src/components/PostList.jsx"],"names":["React","useEffect","useState","Link","search","PostList","url","posts","setPosts","map","post","categoria","title","metadescription","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,YAAnB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CAD4B,CAG5B;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACE,GAAD,EAAME,QAAN,CAAN;AACD,GAFQ,EAEN,EAFM,CAAT,CAJ4B,CAMpB;;AAER,sBACE;AAAS,IAAA,SAAS,EAAC,iBAAnB;AAAA,cACGD,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAU;AACnB;AAAA,cAAC,IAAD;AAAM,QAAA,SAAS,EAAG,4BAA2BA,IAAI,CAACC,SAAU,EAA5D;AAAA,+BACE;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,qBAAd;AAAA,sBAAqCD,IAAI,CAACE;AAA1C;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAG,YAAA,SAAS,EAAC,mBAAb;AAAA,sBAAkCF,IAAI,CAACG;AAAvC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAcH,IAAI,CAACI,EAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAMD,KAPA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CApBD;;GAAMT,Q;;KAAAA,Q;AAsBN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport search from \"../api/api\";\n\nconst PostList = ({ url }) => {\n  const [posts, setPosts] = useState([]);\n\n  //chamando a API\n  useEffect(() => {\n    search(url, setPosts);\n  }, []); //array de dependência, toda vez que for alterar o estado inicial da aplicação, vou chamar search e ele altera o estado da aplicação\n\n  return (\n    <section className=\"posts container\">\n      {posts.map((post) => {\n        <Link className={`cartao-post cartao-post--${post.categoria}`}>\n          <article key={post.id}>\n            <h3 className=\"cartao-post--titulo\">{post.title}</h3>\n            <p className=\"cartao-post--meta\">{post.metadescription}</p>\n          </article>\n        </Link>;\n      })}\n    </section>\n  );\n};\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}